"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3440],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>b});var n=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function l(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?l(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)i=l[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)i=l[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(i),d=a,b=m["".concat(u,".").concat(d)]||m[d]||c[d]||l;return i?n.createElement(b,r(r({ref:t},p),{},{components:i})):n.createElement(b,r({ref:t},p))}));function b(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=i.length,r=new Array(l);r[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[m]="string"==typeof e?e:a,r[1]=o;for(var s=2;s<l;s++)r[s]=i[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},5623:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=i(7462),a=(i(7294),i(3905));const l={id:"ios-remote-debug",title:"iOS Remote Debugging"},r=void 0,o={unversionedId:"ios-remote-debug",id:"ios-remote-debug",title:"iOS Remote Debugging",description:"iOS Remote Debugging is a feature in SmartDust Lab that allows you to have remote access to developer features.",source:"@site/docs/ios-remote-debug.md",sourceDirName:".",slug:"/ios-remote-debug",permalink:"/docs/docs/ios-remote-debug",draft:!1,editUrl:"https://github.com/smartdust-me/docs/blob/main/docs/ios-remote-debug.md",tags:[],version:"current",frontMatter:{id:"ios-remote-debug",title:"iOS Remote Debugging"},sidebar:"tutorialSidebar",previous:{title:"iOS CI-CD pipeline with Jenkins and Appium",permalink:"/docs/docs/ios-appium"},next:{title:"Libimobiledevice installation guide",permalink:"/docs/docs/libimobiledevice"}},u={},s=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Software installation",id:"software-installation",level:2},{value:"Downloads",id:"downloads",level:2},{value:"Usage",id:"usage",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],p={toc:s},m="wrapper";function c(e){let{components:t,...i}=e;return(0,a.kt)(m,(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"iOS Remote Debugging is a feature in SmartDust Lab that allows you to have remote access to developer features.\nThe use cases include running Appium tests and inspecting web views."),(0,a.kt)("p",null,"The connection interface is ",(0,a.kt)("inlineCode",{parentName:"p"},"usbmuxd"),", which enables the use of open-source tools such as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"libimobiledevice")," ",(0,a.kt)("a",{parentName:"li",href:"https://libimobiledevice.org/"},"https://libimobiledevice.org/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pymobiledevice3")," ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/doronz88/pymobiledevice3"},"https://github.com/doronz88/pymobiledevice3")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"go-ios")," ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/danielpaulus/go-ios"},"https://github.com/danielpaulus/go-ios")),(0,a.kt)("li",{parentName:"ul"},"On devices with iOS versions ",(0,a.kt)("em",{parentName:"li"},"older")," than 17 it allows full developer access to the device on MacOS, e.g. in XCode.")),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"A MacOS computer or a machine with Linux OS not older than Ubuntu 20.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Basic command line competence."))),(0,a.kt)("h2",{id:"software-installation"},"Software installation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Install ",(0,a.kt)("inlineCode",{parentName:"p"},"libimobiledevice")," ",(0,a.kt)("a",{parentName:"p",href:"https://libimobiledevice.org/"},"https://libimobiledevice.org/"),".\nMany package managers allow for simple installation.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Install a custom SmartDust version of ",(0,a.kt)("inlineCode",{parentName:"p"},"usbfluxd")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"usbfluxctl")," programs:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Download the appropriate zipped binaries for your OS and CPU from the links below."),(0,a.kt)("li",{parentName:"ul"},"Unzip the files. "),(0,a.kt)("li",{parentName:"ul"},"Rename the files to remove the OS and architecture postfix after ",(0,a.kt)("inlineCode",{parentName:"li"},"_")," (e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"usbfluxd_macos_x64")," -> ",(0,a.kt)("inlineCode",{parentName:"li"},"usbfluxd"),")."),(0,a.kt)("li",{parentName:"ul"},"Add run permissions for the files (",(0,a.kt)("inlineCode",{parentName:"li"},"chmod +x PATH_TO_FILE"),")"),(0,a.kt)("li",{parentName:"ul"},"Move them to a directory that's in your $PATH environment variable so that you can execute it from everywhere.")))),(0,a.kt)("h2",{id:"downloads"},"Downloads"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"usbfluxd"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/usbfluxd-builds/usbfluxd_macos_x64.zip"},"Mac OS x64 binary")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/usbfluxd-builds/usbfluxd_macos_arm.zip"},"Mac OS ARM binary")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/usbfluxd-builds/usbfluxd_linux_x64.zip"},"Linux x64 binary"))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"usbfluxctl"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/usbfluxd-builds/usbfluxctl_macos_x64.zip"},"Mac OS x64 binary")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/usbfluxd-builds/usbfluxctl_macos_arm.zip"},"Mac OS ARM binary")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/usbfluxd-builds/usbfluxd_linux_x64.zip"},"Linux x64 binary"))),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Go to an iOS device on your Smartdust Lab instance and click ",(0,a.kt)("inlineCode",{parentName:"li"},"Enable")," on the ",(0,a.kt)("inlineCode",{parentName:"li"},"Remote Debug")," section in the ",(0,a.kt)("inlineCode",{parentName:"li"},"Dashboard")," tab."),(0,a.kt)("li",{parentName:"ul"},"Copy the displayed command and execute it."),(0,a.kt)("li",{parentName:"ul"},"You can use ",(0,a.kt)("inlineCode",{parentName:"li"},"usbfluxctl list")," to list the connected devices.")),(0,a.kt)("p",null,"At this point it should be possible to connect to the device using various ",(0,a.kt)("inlineCode",{parentName:"p"},"usbmuxd")," based tools."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You can verify the connection by using programs from the ",(0,a.kt)("inlineCode",{parentName:"li"},"libimobiledevice")," toolchain, for example ",(0,a.kt)("inlineCode",{parentName:"li"},"ideviceinfo")," should print a lot of data about one of the connected phones."),(0,a.kt)("li",{parentName:"ul"},"For managing the connections, check out ",(0,a.kt)("inlineCode",{parentName:"li"},"usbfluxctl -h"),".")),(0,a.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In case of connection issues, try disabling and enabling the Remote Debug feature in the Smartdust Lab device page.")))}c.isMDXComponent=!0}}]);