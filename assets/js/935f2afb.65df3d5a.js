"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"CLI Lab client","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SmartDust CLI Client version 1.2.0","href":"/docs/docs/CLI Lab client/cli-client-1-2-0","docId":"CLI Lab client/cli-client-1-2-0"},{"type":"link","label":"SmartDust CLI Client version 1.3.2","href":"/docs/docs/CLI Lab client/cli-client-1-3-2","docId":"CLI Lab client/cli-client-1-3-2"}]},{"type":"link","label":"Configuring and running Appium tests on Android devices in Android Studio","href":"/docs/docs/Configuring and running Appium tests on Android devices in Android Studio","docId":"Configuring and running Appium tests on Android devices in Android Studio"},{"type":"category","label":"For SmartDust Lab operators and partners","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Connecting Android devices to SmartDust Lab","href":"/docs/docs/For SmartDust Lab operators and partners/android-device-setup-guide","docId":"For SmartDust Lab operators and partners/android-device-setup-guide"},{"type":"link","label":"Connecting iOS devices to SmartDust Lab","href":"/docs/docs/For SmartDust Lab operators and partners/ios-device-setup-guide","docId":"For SmartDust Lab operators and partners/ios-device-setup-guide"}]},{"type":"link","label":"Parallel testing Android apps using a remote testing platform and Appium","href":"/docs/docs/Parallel testing Android apps using a remote testing platform and Appium","docId":"Parallel testing Android apps using a remote testing platform and Appium"},{"type":"category","label":"REST API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SmartDust Lab REST API access","href":"/docs/docs/REST API/api-access","docId":"REST API/api-access"},{"type":"link","label":"Connecting to devices remotely via REST API","href":"/docs/docs/REST API/api-remote-debug","docId":"REST API/api-remote-debug"}]},{"type":"link","label":"iOS Appium tests","href":"/docs/docs/ios-appium-tests","docId":"ios-appium-tests"},{"type":"link","label":"iOS CI-CD pipeline with Jenkins and Appium","href":"/docs/docs/ios-appium","docId":"ios-appium"},{"type":"link","label":"iOS Remote Debugging","href":"/docs/docs/ios-remote-debug","docId":"ios-remote-debug"},{"type":"link","label":"Libimobiledevice installation guide","href":"/docs/docs/libimobiledevice","docId":"libimobiledevice"},{"type":"link","label":"sd_remoteios - iOS Remote Connect tool","href":"/docs/docs/sd_remoteios","docId":"sd_remoteios"}]},"docs":{"CLI Lab client/cli-client-1-2-0":{"id":"CLI Lab client/cli-client-1-2-0","title":"SmartDust CLI Client version 1.2.0","description":"Description","sidebar":"tutorialSidebar"},"CLI Lab client/cli-client-1-3-2":{"id":"CLI Lab client/cli-client-1-3-2","title":"SmartDust CLI Client version 1.3.2","description":"Description","sidebar":"tutorialSidebar"},"Configuring and running Appium tests on Android devices in Android Studio":{"id":"Configuring and running Appium tests on Android devices in Android Studio","title":"Configuring and running Appium tests on Android devices in Android Studio","description":"Every developer knows that however daunting it might be, testing is a crucial part of building and deploying software. Mobile apps are not in the very least an exception to this rule due to the immense number of devices and operating systems configurations they have to support. Thankfully, there are many tools facilitating the testing process and one of them, Appium, is the main concern of the article.","sidebar":"tutorialSidebar"},"For SmartDust Lab operators and partners/android-device-setup-guide":{"id":"For SmartDust Lab operators and partners/android-device-setup-guide","title":"Connecting Android devices to SmartDust Lab","description":"Step-by-step instructions for connecting Android devices to the system.","sidebar":"tutorialSidebar"},"For SmartDust Lab operators and partners/ios-device-setup-guide":{"id":"For SmartDust Lab operators and partners/ios-device-setup-guide","title":"Connecting iOS devices to SmartDust Lab","description":"Step-by-step instructions for connecting iOS devices to the system.","sidebar":"tutorialSidebar"},"ios-appium":{"id":"ios-appium","title":"iOS CI-CD pipeline with Jenkins and Appium","description":"Simple example of what\'s needed to set up and run a CI-CD pipeline of an iOS application with Smartdust Lab.","sidebar":"tutorialSidebar"},"ios-appium-tests":{"id":"ios-appium-tests","title":"iOS Appium tests","description":"Components needed:","sidebar":"tutorialSidebar"},"ios-remote-debug":{"id":"ios-remote-debug","title":"iOS Remote Debugging","description":"iOS Remote Debugging is a feature in SmartDust Lab that allows you to have remote access to developer features.","sidebar":"tutorialSidebar"},"libimobiledevice":{"id":"libimobiledevice","title":"Libimobiledevice installation guide","description":"libimobiledevice is a library and tool suite designed to enable communication with iOS","sidebar":"tutorialSidebar"},"Parallel testing Android apps using a remote testing platform and Appium":{"id":"Parallel testing Android apps using a remote testing platform and Appium","title":"Parallel testing Android apps using a remote testing platform and Appium","description":"In my previous article I showed how to set up and use Appium for running tests on mobile devices in Android Studio. It is highly recommended to at least skim through it in order to understand this tutorial. Because today, we are going to take it to the next level \u2014 running tests on multiple devices simultaneously.","sidebar":"tutorialSidebar"},"REST API/api-access":{"id":"REST API/api-access","title":"SmartDust Lab REST API access","description":"Every SmartDust Lab instance exposes a REST API that allows you to access the system programmatically.","sidebar":"tutorialSidebar"},"REST API/api-remote-debug":{"id":"REST API/api-remote-debug","title":"Connecting to devices remotely via REST API","description":"The SmartDust Lab REST API allows you to connect to devices remotely.","sidebar":"tutorialSidebar"},"sd_remoteios":{"id":"sd_remoteios","title":"sd_remoteios - iOS Remote Connect tool","description":"sd_remoteios is a program available for Mac OS and Linux that connects iOS devices from a remote Smartdust Lab so that they\'re visible on your PC as if they were plugged in via USB.","sidebar":"tutorialSidebar"}}}')}}]);