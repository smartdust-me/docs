"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5901],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>v});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),u=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(p.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=u(n),m=a,v=l["".concat(p,".").concat(m)]||l[m]||d[m]||r;return n?i.createElement(v,o(o({ref:t},c),{},{components:n})):i.createElement(v,o({ref:t},c))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[l]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<r;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6905:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var i=n(7462),a=(n(7294),n(3905));const r={id:"appium-service",title:"Appium service (limited availability)"},o=void 0,s={unversionedId:"appium-service",id:"appium-service",title:"Appium service (limited availability)",description:"This article describes an Appium service that exposes an Appium server hosted on a SmartDust Lab instance.",source:"@site/docs/appium-service.md",sourceDirName:".",slug:"/appium-service",permalink:"/docs/appium-service",draft:!1,editUrl:"https://github.com/smartdust-me/docs/blob/main/docs/appium-service.md",tags:[],version:"current",frontMatter:{id:"appium-service",title:"Appium service (limited availability)"},sidebar:"tutorialSidebar",previous:{title:"Configuring and running Appium tests on Android devices in Android Studio",permalink:"/docs/android-studio-appium"},next:{title:"Automated tests (CI/CD) in Smartdust Lab",permalink:"/docs/automated-android-tests"}},p={},u=[{value:"Connection configuration",id:"connection-configuration",level:2},{value:"User authorization",id:"user-authorization",level:2},{value:"Android native tests",id:"android-native-tests",level:2},{value:"Android browser tests",id:"android-browser-tests",level:2},{value:"iOS tests",id:"ios-tests",level:2},{value:"Tips",id:"tips",level:2}],c={toc:u},l="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This article describes an Appium service that exposes an Appium server hosted on a SmartDust Lab instance.\nThis allows for running Appium test on remote SmartDust devices with minimal setup and configuration."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"For now, this feature is only available on chosen Smartdust Lab private instances.\nIf you'd like to use it, please contact us for the details.")),(0,a.kt)("h2",{id:"connection-configuration"},"Connection configuration"),(0,a.kt)("p",null,"To use the Appium service, you need to set up the Appium server connection details in your test setup code.\nThe details vary depending on the programming language and Appium client you are using.\nThe examples in this guide are for the WebdriverIO client library for JavaScript/TypeScript, but it should be easy to translate them to other technologies."),(0,a.kt)("p",null,"The connection details can be passed in an 'options' object when initializing an Appium client instance in WebDriverIO.\nYou need to pass the SmartDust Appium server address, set the protocol to HTTPS and the port to 443.\nThe default prepended path needs to be set, as well as authorization headers.\nContact Smartdust support to obtain the connection details for your instance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const options = {\n  path: '/appium',\n  hostname: '[yourinstance].smartdust.me',\n  protocol: 'https',\n  port: 443,\n  headers: {\n    Authorization: `Basic ${Buffer.from('appiumuser:password').toString('base64')}`\n  }\n};\nconst client = await remote(options);\n")),(0,a.kt)("h2",{id:"user-authorization"},"User authorization"),(0,a.kt)("p",null,"To use the Appium service, you need to have an active SmartDust Lab account on your instance so that the devices are locked under your name during test runs.\nYou have to generate an API token.\nTo do so please log in to your Smartdust Lab instance and click the ",(0,a.kt)("strong",{parentName:"p"},"Settings")," button on the top bar menu.\nGo to the ",(0,a.kt)("strong",{parentName:"p"},"Keys")," tab and in the ",(0,a.kt)("strong",{parentName:"p"},"Access Tokens")," section, click the ",(0,a.kt)("strong",{parentName:"p"},"+")," button to generate a new token.\nSave it somewhere safe, as you will not be able to see it again.\nIf you lose it, you'll need to generate a new one.\nThe generated token needs to be passed in the Appium session capabilities, named ",(0,a.kt)("inlineCode",{parentName:"p"},"smart:token"),"."),(0,a.kt)("h2",{id:"android-native-tests"},"Android native tests"),(0,a.kt)("p",null,"Use the following capabilities to run native tests on Android devices:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const capabilities = {\n    'smart:token': 'your_api_token_here',\n    'appium:automationName': 'UiAutomator2',\n    'platformName': 'Android',\n    'wdio:enforceWebDriverClassic': true \n}\n")),(0,a.kt)("p",null,"That's it!\nYou can be more specific if you wish, for example, by specifying the device UDID or OS version.\nYou can use any standard Appium capabilities."),(0,a.kt)("h2",{id:"android-browser-tests"},"Android browser tests"),(0,a.kt)("p",null,"Use the capabilities below to run web browser tests on Android devices:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const capabilities = {\n    'smart:token': 'your_api_token_here',\n    'appium:automationName': 'UiAutomator2',\n    'platformName': 'Android',\n    'browserName': 'chrome',\n    'appium:chromedriverExecutableDir': 'chromedrivers', \n    'wdio:enforceWebDriverClassic': true \n}\n")),(0,a.kt)("h2",{id:"ios-tests"},"iOS tests"),(0,a.kt)("p",null,"Here's a minimal set of capabilities to run native app tests on iOS devices:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const capabilities = {\n  'smart:token': 'your_api_token_here',\n  'appium:automationName': \"XCUITest\",\n  'platformName': \"iOS\",\n  //'browserName': \"Safari\", // enable this to run web browser (Safari) tests\n}\n")),(0,a.kt)("p",null,"As per the comment, you can enable the ",(0,a.kt)("inlineCode",{parentName:"p"},"browserName")," capability to run web browser tests on iOS devices."),(0,a.kt)("h2",{id:"tips"},"Tips"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The Appium service is currently in a limited availability state, so please contact Smartdust support to get access."),(0,a.kt)("li",{parentName:"ul"},"In case of persisting issues, please contact Smartdust support for assistance."),(0,a.kt)("li",{parentName:"ul"},"The Appium tests startup time varies wildly depending on the device used.")))}d.isMDXComponent=!0}}]);