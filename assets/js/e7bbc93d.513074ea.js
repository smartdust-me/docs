"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5355],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var i=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,h=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return n?i.createElement(h,r(r({ref:t},d),{},{components:n})):i.createElement(h,r({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,r[1]=s;for(var c=2;c<a;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6065:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=n(7462),o=(n(7294),n(3905));const a={},r="SmartDust CLI Client version 1.3.2",s={unversionedId:"CLI Lab client/cli-client-1-3-2",id:"CLI Lab client/cli-client-1-3-2",title:"SmartDust CLI Client version 1.3.2",description:"Description",source:"@site/docs/CLI Lab client/cli-client-1-3-2.md",sourceDirName:"CLI Lab client",slug:"/CLI Lab client/cli-client-1-3-2",permalink:"/docs/docs/CLI Lab client/cli-client-1-3-2",draft:!1,editUrl:"https://github.com/smartdust-me/docs/blob/main/docs/CLI Lab client/cli-client-1-3-2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SmartDust CLI Client version 1.2.0",permalink:"/docs/docs/CLI Lab client/cli-client-1-2-0"},next:{title:"Configuring and running Appium tests on Android devices in Android Studio",permalink:"/docs/docs/Configuring and running Appium tests on Android devices in Android Studio"}},l={},c=[{value:"Description",id:"description",level:3},{value:"Installation",id:"installation",level:2},{value:"Device connecting tutorial",id:"device-connecting-tutorial",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Getting a Lab connection token",id:"getting-a-lab-connection-token",level:3},{value:"Setting your Lab token and URL as environmental variables",id:"setting-your-lab-token-and-url-as-environmental-variables",level:3},{value:"Connecting to Android devices",id:"connecting-to-android-devices",level:2},{value:"Connecting to a device for the first time",id:"connecting-to-a-device-for-the-first-time",level:3},{value:"Connecting to iOS devices",id:"connecting-to-ios-devices",level:2},{value:"Disconnecting from the devices",id:"disconnecting-from-the-devices",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],d={toc:c},u="wrapper";function p(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,i.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"smartdust-cli-client-version-132"},"SmartDust CLI Client version 1.3.2"),(0,o.kt)("h3",{id:"description"},"Description"),(0,o.kt)("p",null,"SmartDust CLI client is a tool that enables connecting to devices present in Smartdust Lab instances via ADB (Android) and usbfluxd (iOS) through the command line.\nThis in turn allows for automation of development/testing/etc. processes as connecting to devices can be done entirely in terminal script environments without touching the web UI interface.\nIt enables usage of CI/CD tools such as Jenkins."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Install ",(0,o.kt)("a",{parentName:"p",href:"https://www.ruby-lang.org/en/downloads/"},"Ruby"),". For best compatibility, use Ruby 3.0 or later.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Then you can install Smartdust CLI client as a Ruby gem:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"  sudo gem install smartdust-client -v 1.3.2\n")))),(0,o.kt)("h2",{id:"device-connecting-tutorial"},"Device connecting tutorial"),(0,o.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"An account that you can log in to a Smartdust Lab with - you can make one by visiting ",(0,o.kt)("a",{parentName:"li",href:"https://smartdust.me"},"smartdust.me")),(0,o.kt)("li",{parentName:"ul"},"Using a Linux OS and having basic knowledge regarding using the terminal - using Bash or zsh is recommended"),(0,o.kt)("li",{parentName:"ul"},"Android:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://developer.android.com/tools/adb"},"Android Debug Bridge")," installed"))),(0,o.kt)("li",{parentName:"ul"},"iOS:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Smartdust version of ",(0,o.kt)("inlineCode",{parentName:"li"},"usbfluxd")," installed - refer to the ",(0,o.kt)("a",{parentName:"li",href:"/docs/docs/ios-remote-debug"},"iOS Remote Debugging documentation")," for instructions")))),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"A Smartdust account with administrator privileges cannot be used with this tool, it doesn\u2019t work!")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"You cannot reuse the same ADB key in another Smartdust account.")),(0,o.kt)("p",null,"Steps:"),(0,o.kt)("p",null,"Follow the installation instructions from above and make sure that the client is installed properly by entering ",(0,o.kt)("inlineCode",{parentName:"p"},"smartdust-client")," in your terminal window.\nYou should see a description of the tool\u2019s options."),(0,o.kt)("h3",{id:"getting-a-lab-connection-token"},"Getting a Lab connection token"),(0,o.kt)("p",null,"Obtain a Smartdust Lab connection token from a Smartdust Lab instance - for example at public.smartdust.me.\nAfter logging in, click \u201cSettings\u201d on the upper menu bar:\n",(0,o.kt)("img",{src:n(7964).Z,width:"612",height:"168"})),(0,o.kt)("p",null,"Then go to the \u201cKeys\u201d tab and in the \u201cAccess Tokens\u201d pane click on the \u201c+\u201d icon on the right.\n",(0,o.kt)("img",{src:n(7185).Z,width:"952",height:"420"}),"\nName your token however you like and after clicking \u201cGenerate New Token\u201d your token will be displayed as a string of characters.\nCopy it and keep it somewhere you\u2019ll have access to."),(0,o.kt)("p",null,"Go back to the main view of the Lab, for example by clicking on the Smartdust logo in the upper left corner."),(0,o.kt)("h3",{id:"setting-your-lab-token-and-url-as-environmental-variables"},"Setting your Lab token and URL as environmental variables"),(0,o.kt)("p",null,"Go back to the terminal. For convenience, it is recommended to set environmental variables for the token you just copied and the URL of the Smartdust Lab.\nThis is described by the tool itself when you run ",(0,o.kt)("inlineCode",{parentName:"p"},"smartdust-client -h"),".\nInstead of using environmental variables we can just pass appropriate flags when interacting with the client but for the purposes of this tutorial let\u2019s proceed with the former."),(0,o.kt)("p",null,"Setting the variables we need in a Bash or zsh shell goes as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"export SD_TOKEN=your_copied_token\nexport SD_URL=https://[your_instance_name].smartdust.me\n")),(0,o.kt)("p",null,"It might differ if you\u2019re using a different shell, check for suitable instructions online."),(0,o.kt)("p",null,"As you can see, the Smartdust Lab URL must be passed in the full, including the ",(0,o.kt)("inlineCode",{parentName:"p"},"https://")," protocol signifier.\nHowever, don\u2019t add any trailing characters after the domain name of the Lab which might be displayed in your browser."),(0,o.kt)("h2",{id:"connecting-to-android-devices"},"Connecting to Android devices"),(0,o.kt)("h3",{id:"connecting-to-a-device-for-the-first-time"},"Connecting to a device for the first time"),(0,o.kt)("p",null,"Keep the web UI interface of the Smartdust Lab open in your browser and in the terminal window use the freshly installed Smartdust CLI client like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"smartdust-client connect --min=1 -n 1 -f platform:Android\n")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"If that\u2019s the first time you\u2019re connecting to a Smartdust Lab device using ADB, a popup should now appear in the web interface, prompting you to add a new ADB key.\nConfirm it and run the above command again.")),(0,o.kt)("p",null,"It is highly advisable to use both --min and -n arguments and set them to the same value."),(0,o.kt)("p",null,"That\u2019s it, the tool should now connect you to an available Lab device via ADB!\nAfter it finishes its work, check ",(0,o.kt)("inlineCode",{parentName:"p"},"adb devices")," and the devices should be available for you to use via ADB!\nKeep in mind that the devices will appear as ","[instance_name]",".smartdust.me:xxxx where ",(0,o.kt)("inlineCode",{parentName:"p"},"xxxx")," is a random port number assigned to the device by the Smartdust Lab instance each time."),(0,o.kt)("p",null,"If you want to connect to more devices and/or use particular types of devices, use the -h flag to find out more about a given command.\nFor example ",(0,o.kt)("inlineCode",{parentName:"p"},"smartdust-client connect -h")," will show you all the available options for the ",(0,o.kt)("inlineCode",{parentName:"p"},"connect")," command."),(0,o.kt)("h2",{id:"connecting-to-ios-devices"},"Connecting to iOS devices"),(0,o.kt)("p",null,"Please go through the steps described in ",(0,o.kt)("a",{parentName:"p",href:"/docs/docs/ios-remote-debug"},"iOS Remote Debugging documentation")," before proceeding."),(0,o.kt)("p",null,"When connecting to iOS devices, Smartdust CLI relies on ",(0,o.kt)("a",{parentName:"p",href:"/docs/docs/ios-remote-debug"},(0,o.kt)("inlineCode",{parentName:"a"},"usbfluxd")),".\n",(0,o.kt)("em",{parentName:"p"},"Before connecting to iOS devices ",(0,o.kt)("inlineCode",{parentName:"em"},"usbfluxd")," needs to be run")," with root privileges:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo usbfluxd -n\n")),(0,o.kt)("p",null,"One way to connect to an iOS device is by copying its serial number and executing the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"smartdust-client connect -f serial:[serial_number]\n")),(0,o.kt)("p",null,"You should of course put the serial of your device after the colon."),(0,o.kt)("p",null,"That\u2019s it! You can confirm the connected devices by listing them:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"usbfluxctl list\n")),(0,o.kt)("p",null,"It can surprise you, but there can be more than one device on the list.\nDue to the current connection mechanism, you get connected to all the iOS devices from one provider."),(0,o.kt)("h2",{id:"disconnecting-from-the-devices"},"Disconnecting from the devices"),(0,o.kt)("p",null,"In order to disconnect from all devices, both via ADB, ",(0,o.kt)("inlineCode",{parentName:"p"},"usbfluxd")," and also to free them in the Lab, use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"smartdust-client disconnect --all\n")),(0,o.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"On a rare occasion that different users start the Smartdust CLI Client on the same device, there might be a permission issue with some temporary files the program creates.\nIn that case, forcefully delete the ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/stf-client.log")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"/tmp/stf-client.pid")," files.")))}p.isMDXComponent=!0},7185:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/access-token-settings-1ca7d9a705f344d1387cf3491a59195e.png"},7964:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/upper-menu-settings-9841a4f9918f85049f9d9e826b568c33.png"}}]);