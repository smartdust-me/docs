"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3440],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,b=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return n?a.createElement(b,r(r({ref:t},p),{},{components:n})):a.createElement(b,r({ref:t},p))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:i,r[1]=o;for(var u=2;u<l;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5623:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const l={id:"ios-remote-debug",title:"iOS Remote Debugging"},r=void 0,o={unversionedId:"ios-remote-debug",id:"ios-remote-debug",title:"iOS Remote Debugging",description:"iOS Remote Debugging is a feature in SmartDust Lab that allows you to have remote access to developer features.",source:"@site/docs/ios-remote-debug.md",sourceDirName:".",slug:"/ios-remote-debug",permalink:"/docs/ios-remote-debug",draft:!1,editUrl:"https://github.com/smartdust-me/docs/blob/main/docs/ios-remote-debug.md",tags:[],version:"current",frontMatter:{id:"ios-remote-debug",title:"iOS Remote Debugging"},sidebar:"tutorialSidebar",previous:{title:"iOS CI-CD pipeline with Jenkins and Appium",permalink:"/docs/ios-appium"},next:{title:"Libimobiledevice installation guide",permalink:"/docs/libimobiledevice"}},s={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Software installation",id:"software-installation",level:2},{value:"Downloads",id:"downloads",level:2},{value:"Usage",id:"usage",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],p={toc:u},m="wrapper";function c(e){let{components:t,...l}=e;return(0,i.kt)(m,(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"iOS Remote Debugging is a feature in SmartDust Lab that allows you to have remote access to developer features.\nThe use cases include running Appium tests and inspecting web views."),(0,i.kt)("p",null,"The connection interface is ",(0,i.kt)("inlineCode",{parentName:"p"},"usbmuxd"),", which enables the use of open-source tools such as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"libimobiledevice")," ",(0,i.kt)("a",{parentName:"li",href:"https://libimobiledevice.org/"},"https://libimobiledevice.org/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pymobiledevice3")," ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/doronz88/pymobiledevice3"},"https://github.com/doronz88/pymobiledevice3")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"go-ios")," ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/danielpaulus/go-ios"},"https://github.com/danielpaulus/go-ios")),(0,i.kt)("li",{parentName:"ul"},"On devices with iOS versions ",(0,i.kt)("em",{parentName:"li"},"older")," than 17 it allows full developer access to the device on MacOS, e.g. in XCode.")),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A MacOS computer or a machine with Linux OS not older than Ubuntu 20.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Basic command line competence."))),(0,i.kt)("h2",{id:"software-installation"},"Software installation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Install ",(0,i.kt)("inlineCode",{parentName:"p"},"libimobiledevice")," ",(0,i.kt)("a",{parentName:"p",href:"https://libimobiledevice.org/"},"https://libimobiledevice.org/"),".\nMany package managers allow for simple installation.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Install a custom SmartDust version of ",(0,i.kt)("inlineCode",{parentName:"p"},"usbfluxd")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"usbfluxctl")," programs:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Download the appropriate zipped binaries for your OS and CPU from the links below."),(0,i.kt)("li",{parentName:"ul"},"Unzip the files. "),(0,i.kt)("li",{parentName:"ul"},"Rename the files to remove the OS and architecture postfix after ",(0,i.kt)("inlineCode",{parentName:"li"},"_")," (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"usbfluxd_macos_x64")," -> ",(0,i.kt)("inlineCode",{parentName:"li"},"usbfluxd"),")."),(0,i.kt)("li",{parentName:"ul"},"Add run permissions for the files (",(0,i.kt)("inlineCode",{parentName:"li"},"chmod +x PATH_TO_FILE"),")"),(0,i.kt)("li",{parentName:"ul"},"Move them to a directory that's in your $PATH environment variable so that you can execute it from everywhere.")))),(0,i.kt)("h2",{id:"downloads"},"Downloads"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"usbfluxd"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{target:"_blank",href:n(1577).Z},"Mac OS x64 binary")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{target:"_blank",href:n(7010).Z},"Mac OS ARM binary")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{target:"_blank",href:n(6464).Z},"Linux x64 binary"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"usbfluxctl"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{target:"_blank",href:n(3418).Z},"Mac OS x64 binary")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{target:"_blank",href:n(9143).Z},"Mac OS ARM binary")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{target:"_blank",href:n(6464).Z},"Linux x64 binary"))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Go to an iOS device on your Smartdust Lab instance and click ",(0,i.kt)("inlineCode",{parentName:"li"},"Enable")," on the ",(0,i.kt)("inlineCode",{parentName:"li"},"Remote Debug")," section in the ",(0,i.kt)("inlineCode",{parentName:"li"},"Dashboard")," tab."),(0,i.kt)("li",{parentName:"ul"},"A command is displayed for an older tool, ",(0,i.kt)("a",{parentName:"li",href:"/docs/sd_remoteios"},(0,i.kt)("inlineCode",{parentName:"a"},"sd_remoteios")),", which is ",(0,i.kt)("em",{parentName:"li"},"not recommended")," anymore."),(0,i.kt)("li",{parentName:"ul"},"Copy only the part that looks like ","[instance_name]",".smartdust.me:","[port]",". (You can also just manually take the port number)."),(0,i.kt)("li",{parentName:"ul"},"In your terminal, run the command ",(0,i.kt)("inlineCode",{parentName:"li"},"usbfluxctl add [instance_name].smartdust.me:[port]"),", for example ",(0,i.kt)("inlineCode",{parentName:"li"},"usbfluxctl add public.smartdust.me:12345"),"."),(0,i.kt)("li",{parentName:"ul"},"You can use ",(0,i.kt)("inlineCode",{parentName:"li"},"usbfluxctl list")," to list the connected devices.")),(0,i.kt)("p",null,"At this point it should be possible to connect to the device using various ",(0,i.kt)("inlineCode",{parentName:"p"},"usbmuxd")," based tools."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You can verify the connection by using programs from the ",(0,i.kt)("inlineCode",{parentName:"li"},"libimobiledevice")," toolchain, for example ",(0,i.kt)("inlineCode",{parentName:"li"},"ideviceinfo")," should print a lot of data about one of the connected phones."),(0,i.kt)("li",{parentName:"ul"},"For managing the connections, check out ",(0,i.kt)("inlineCode",{parentName:"li"},"usbfluxctl -h"),".")),(0,i.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"In case of connection issues, try disabling and enabling the Remote Debug feature in the Smartdust Lab device page.")))}c.isMDXComponent=!0},9143:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/usbfluxctl_macos_arm-8c34d398c167f4d6c7bf501c161979b5.zip"},3418:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/usbfluxctl_macos_x64-af2777b78bef51f14bd2e32ea27394f4.zip"},6464:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/usbfluxd_linux_x64-402789b7aea413803074065c9b4f4708.zip"},7010:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/usbfluxd_macos_arm-3a5904a05fa1e0f0896264ffe569bf20.zip"},1577:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/usbfluxd_macos_x64-ab2b14378a6325864ed2d32455323c62.zip"}}]);