"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9094],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),u=a,f=p["".concat(s,".").concat(u)]||p[u]||m[u]||r;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var d=2;d<r;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9552:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=n(7462),a=(n(7294),n(3905));const r={},i="sd_remoteios - iOS Remote Connect tool (deprecated)",l={unversionedId:"sd_remoteios",id:"sd_remoteios",title:"sd_remoteios - iOS Remote Connect tool (deprecated)",description:"sd_remoteios became deprecated in June 2025 and is no longer recommended for use.",source:"@site/docs/sd_remoteios.md",sourceDirName:".",slug:"/sd_remoteios",permalink:"/docs/sd_remoteios",draft:!1,editUrl:"https://github.com/smartdust-me/docs/blob/main/docs/sd_remoteios.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Libimobiledevice installation guide",permalink:"/docs/libimobiledevice"}},s={},d=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],c={toc:d},p="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sd_remoteios---ios-remote-connect-tool-deprecated"},(0,a.kt)("inlineCode",{parentName:"h1"},"sd_remoteios")," - iOS Remote Connect tool (deprecated)"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"sd_remoteios")," became deprecated in June 2025 and is no longer recommended for use.\nRead the ",(0,a.kt)("a",{parentName:"p",href:"/docs/ios-remote-debug"},"iOS Remote Debugging documentation")," to learn about the recommended tools to connect to iOS devices.")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"sd_remoteios")," is a program available for Mac OS and Linux that connects iOS devices from a remote Smartdust Lab so that they're visible on your PC as if they were plugged in via USB.\nIn itself, it's not a feature rich tool, so for automation purposes for example, we recommend using the ",(0,a.kt)("a",{parentName:"p",href:"/docs/CLI%20Lab%20client/cli-client-1-2"},"Smartdust CLI Client")," that utilizes ",(0,a.kt)("inlineCode",{parentName:"p"},"sd_remoteios")," under the hood."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Grab the appropriate binary for your OS"),(0,a.kt)("li",{parentName:"ul"},"Put it in a directory that's in your PATH so that you can call it everywhere."),(0,a.kt)("li",{parentName:"ul"},"Add run permissions for the file (",(0,a.kt)("inlineCode",{parentName:"li"},"chmod +x PATH_TO_FILE"),")"),(0,a.kt)("li",{parentName:"ul"},"Also, if your downloaded file contains an architectural postfix (e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"x64"),"), rename it to ",(0,a.kt)("inlineCode",{parentName:"li"},"sd_remoteios"),"."),(0,a.kt)("li",{parentName:"ul"},'Mac OS - you need to "Trust" the application the first time you run it. Locate it in Finder and select "Open" from right-click context menu.')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"After clicking the link, refresh the page to download.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{target:"_blank",href:n(5007).Z},"Mac OS universal binary")," "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{target:"_blank",href:n(4886).Z},"Mac OS ARM64 binary")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{target:"_blank",href:n(6326).Z},"Linux x64 binary"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Linux"),": additionally, you need to install ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/libimobiledevice/usbmuxd"},"usbmuxd")," and make sure it works:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"`sudo systemctl start usbmuxd`\n`sudo systemctl status usbmuxd`\n")),(0,a.kt)("p",null,"We also recommend for all users to install ",(0,a.kt)("inlineCode",{parentName:"p"},"libimobiledevice")," tools for easier debugging. More info ",(0,a.kt)("a",{parentName:"p",href:"/docs/libimobiledevice"},"here"),"."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Go to an iOS device on your Smartdust Lab instance and click ",(0,a.kt)("inlineCode",{parentName:"p"},"Enable")," on the ",(0,a.kt)("inlineCode",{parentName:"p"},"Remote Debug")," section in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Dashboard")," tab.\n",(0,a.kt)("img",{src:n(724).Z,width:"669",height:"228"})),(0,a.kt)("p",null,"If on Mac OS, copy the command and execute it. "),(0,a.kt)("p",null,"On Linux, you should first make sure that the ",(0,a.kt)("inlineCode",{parentName:"p"},"usbmuxd")," service is working."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"`sudo systemctl enable usbmuxd`\n")),(0,a.kt)("p",null,"In the command itself, delete the ",(0,a.kt)("inlineCode",{parentName:"p"},"./")," characters before the executable name, e.g."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"`sudo sd_remoteios -c xxx.smartdust.me:12345`\n")),(0,a.kt)("p",null,"You can verify the connection by using programs from the ",(0,a.kt)("inlineCode",{parentName:"p"},"libimobiledevice")," toolchain, for example ",(0,a.kt)("inlineCode",{parentName:"p"},"ideviceinfo")," should print a lot of data about one of the connected phones."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"For your devices to be visible in XCode and similar apps, you need to open the application only ",(0,a.kt)("strong",{parentName:"p"},"after")," you've made a connection.\nIf they were previously running, you need to fully restart them.")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Due to the current connection mechanism, you get connected to all the iOS devices from one provider.\nAdditionally, as for now, ",(0,a.kt)("inlineCode",{parentName:"p"},"sd_remoteios"),' and consequently Smartdust CLI Client can only connect to one "connection string" at a time.')),(0,a.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Sometimes, especially in bad network condition, your connection to the remote devices might suddenly drop. In that case, restart ",(0,a.kt)("inlineCode",{parentName:"p"},"sd_remoteios"),".\nYou can also obtain a new connection URL by click ",(0,a.kt)("inlineCode",{parentName:"p"},"Disable")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Enable")," again on the Remote Debug panel in Smartdust Lab device page.")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"You might encounter an error saying that ",(0,a.kt)("inlineCode",{parentName:"p"},"/tmp/usbfluxd")," has locked permission. You can resolve that by deleting the file yourself:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"`sudo rm /tmp/usbfluxd`\n"))))}m.isMDXComponent=!0},5007:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/files/sd_remoteios-a3bd5286f3879ba90c0795267d6a3661.zip"},4886:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/files/sd_remoteios_arm64-94c88e35a75cee7d0b467886e8851a48.zip"},6326:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/files/sd_remoteios_x64-de672a4b2f439534a1d9634b853a2ef6.zip"},724:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/remote-debug-96ea314431546380a0236092af32a0fe.png"}}]);